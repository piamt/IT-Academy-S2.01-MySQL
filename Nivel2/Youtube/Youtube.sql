-- MySQL Script generated by MySQL Workbench
-- Sun Nov 10 18:59:56 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `date_birth` DATETIME NOT NULL,
  `Sex` ENUM('F', 'M', 'O') NOT NULL COMMENT 'F: Female\nM: Male\nO: Other\n',
  `country` VARCHAR(45) NOT NULL,
  `postal_code` VARCHAR(5) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`videos` (
  `video_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(250) NOT NULL,
  `size` DOUBLE NOT NULL,
  `video_file_name` VARCHAR(45) NOT NULL,
  `length` DOUBLE NOT NULL,
  `thumbnal` VARCHAR(45) NOT NULL,
  `number_views` INT NOT NULL,
  `number_likes` INT NOT NULL,
  `number_dislikes` INT NOT NULL,
  `state` ENUM('Pb', 'H', 'Pr') NOT NULL COMMENT 'Pb: Public\nH: Hidden\nPr: Private',
  `users_owner_id` INT NOT NULL,
  PRIMARY KEY (`video_id`),
  INDEX `fk_videos_users_idx` (`users_owner_id` ASC) VISIBLE,
  CONSTRAINT `fk_videos_users`
    FOREIGN KEY (`users_owner_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`labels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`labels` (
  `label_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`label_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`channels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`channels` (
  `channel_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(250) NOT NULL,
  `users_owner_id` INT NOT NULL,
  PRIMARY KEY (`channel_id`),
  INDEX `fk_channels_users1_idx` (`users_owner_id` ASC) VISIBLE,
  CONSTRAINT `fk_channels_users1`
    FOREIGN KEY (`users_owner_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`playlists` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `name` VARCHAR(45) NOT NULL,
  `state` ENUM('P', 'Pr') NOT NULL COMMENT 'P: Public\nPr: Private',
  `users_user_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`, `users_user_id`),
  INDEX `fk_playlists_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`comments` (
  `comment_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `text` VARCHAR(45) NOT NULL,
  `users_user_id` INT NOT NULL,
  PRIMARY KEY (`comment_id`, `users_user_id`),
  INDEX `fk_comments_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_comments_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`videos_has_labels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`videos_has_labels` (
  `videos_video_id` INT NOT NULL,
  `labels_label_id` INT NOT NULL,
  PRIMARY KEY (`videos_video_id`, `labels_label_id`),
  INDEX `fk_videos_has_labels_labels1_idx` (`labels_label_id` ASC) VISIBLE,
  INDEX `fk_videos_has_labels_videos1_idx` (`videos_video_id` ASC) VISIBLE,
  CONSTRAINT `fk_videos_has_labels_videos1`
    FOREIGN KEY (`videos_video_id`)
    REFERENCES `Youtube`.`videos` (`video_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_videos_has_labels_labels1`
    FOREIGN KEY (`labels_label_id`)
    REFERENCES `Youtube`.`labels` (`label_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`users_subscribe_channels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`users_subscribe_channels` (
  `users_user_id` INT NOT NULL,
  `channels_channel_id` INT NOT NULL,
  PRIMARY KEY (`users_user_id`, `channels_channel_id`),
  INDEX `fk_users_has_channels_channels1_idx` (`channels_channel_id` ASC) VISIBLE,
  INDEX `fk_users_has_channels_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_channels_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_channels_channels1`
    FOREIGN KEY (`channels_channel_id`)
    REFERENCES `Youtube`.`channels` (`channel_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`users_like_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`users_like_videos` (
  `users_user_id` INT NOT NULL,
  `videos_video_id` INT NOT NULL,
  `created` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `like` TINYINT NULL DEFAULT NULL COMMENT '0: Dislikes\n1: Likes',
  PRIMARY KEY (`users_user_id`, `videos_video_id`),
  INDEX `fk_users_has_videos_videos1_idx` (`videos_video_id` ASC) VISIBLE,
  INDEX `fk_users_has_videos_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_videos_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_videos_videos1`
    FOREIGN KEY (`videos_video_id`)
    REFERENCES `Youtube`.`videos` (`video_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`playlists_have_videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`playlists_have_videos` (
  `playlists_playlist_id` INT NOT NULL,
  `playlists_users_user_id` INT NOT NULL,
  `videos_video_id` INT NOT NULL,
  PRIMARY KEY (`playlists_playlist_id`, `playlists_users_user_id`, `videos_video_id`),
  INDEX `fk_playlists_has_videos_videos1_idx` (`videos_video_id` ASC) VISIBLE,
  INDEX `fk_playlists_has_videos_playlists1_idx` (`playlists_playlist_id` ASC, `playlists_users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlists_has_videos_playlists1`
    FOREIGN KEY (`playlists_playlist_id` , `playlists_users_user_id`)
    REFERENCES `Youtube`.`playlists` (`playlist_id` , `users_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlists_has_videos_videos1`
    FOREIGN KEY (`videos_video_id`)
    REFERENCES `Youtube`.`videos` (`video_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`videos_has_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`videos_has_comments` (
  `videos_video_id` INT NOT NULL,
  `comments_comment_id` INT NOT NULL,
  `comments_users_user_id` INT NOT NULL,
  PRIMARY KEY (`videos_video_id`, `comments_comment_id`, `comments_users_user_id`),
  INDEX `fk_videos_has_comments_comments1_idx` (`comments_comment_id` ASC, `comments_users_user_id` ASC) VISIBLE,
  INDEX `fk_videos_has_comments_videos1_idx` (`videos_video_id` ASC) VISIBLE,
  CONSTRAINT `fk_videos_has_comments_videos1`
    FOREIGN KEY (`videos_video_id`)
    REFERENCES `Youtube`.`videos` (`video_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_videos_has_comments_comments1`
    FOREIGN KEY (`comments_comment_id` , `comments_users_user_id`)
    REFERENCES `Youtube`.`comments` (`comment_id` , `users_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`users_likes_comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`users_likes_comments` (
  `users_user_id` INT NOT NULL,
  `comments_comment_id` INT NOT NULL,
  `comments_users_user_id` INT NOT NULL,
  `like` TINYINT NOT NULL COMMENT '0: Dislike\n1: Like',
  `created` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`users_user_id`, `comments_comment_id`, `comments_users_user_id`),
  INDEX `fk_users_has_comments_comments1_idx` (`comments_comment_id` ASC, `comments_users_user_id` ASC) VISIBLE,
  INDEX `fk_users_has_comments_users1_idx` (`users_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_comments_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `Youtube`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_users_has_comments_comments1`
    FOREIGN KEY (`comments_comment_id` , `comments_users_user_id`)
    REFERENCES `Youtube`.`comments` (`comment_id` , `users_user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
